---
import Layout from '../../../components/Layout.astro';
import { getCollection } from 'astro:content';
import { withBase } from '../../../lib/paths';
import { tagSlug } from '../../../lib/tags';
import { playerModeSlug, playerModeLabel, playerModeClass } from '../../../lib/playerMode';

export async function getStaticPaths() {
  const games = await getCollection('games');
  return games.map(g => {
    const rawType = (g.data.type || 'misc').toString().trim();
    const type = rawType
      .toLowerCase()
      .replace(/\s+/g, '-')
      .replace(/[^a-z0-9\-]/g, '');

    const parts = g.slug.split('/').filter(Boolean);
    const leaf = parts[parts.length - 1];

    return {
      params: { type, slug: leaf },
      props: { entry: g, type }
    };
  });
}

const { entry, type } = Astro.props;
const { Content } = await entry.render();

const title = entry.data.title;
const description = entry.data.excerpt || `Game: ${title}.`;
const format = entry.data.format || entry.data.players; // fallback
const tags: string[] = Array.isArray(entry.data.tags) ? entry.data.tags : [];
const excerpt = entry.data.excerpt;
---
<Layout title={title} description={description}>
  <article class="prose prose-invert max-w-none">
    <h1 class="font-display text-4xl mb-2">{title}</h1>
    {excerpt && <p class="text-lg text-muted mb-4 leading-relaxed max-w-prose">{excerpt}</p>}

    <div class="flex flex-wrap gap-2 mb-6">
      {format && (
        <a
          class={playerModeClass(format)}
          href={withBase(`games/players/${playerModeSlug(format)}/`)}
          aria-label={`Format: ${playerModeLabel(format)}`}
        >
          {playerModeLabel(format)}
        </a>
      )}
      {type && (
        <a
          class="mode-pill"
          href={withBase(`games/${type}/`)}
          aria-label={`Game type: ${type}`}
        >
          {type}
        </a>
      )}
      {tags.map(t => {
        const slug = tagSlug(t);
        return (
          <a
            href={withBase(`tags/${slug}/`)}
            class="tag-pill"
            aria-label={`Tag: ${t}`}
          >{t}</a>
        );
      })}
      {tags.length > 0 && (
        <a href={withBase('tags/')} class="tag-pill" aria-label="Browse all tags">All Tags</a>
      )}
    </div>

    <Content />
  </article>

  <p class="mt-10 text-sm">
    <a class="hover:text-neon underline underline-offset-4" href={withBase(`games/${type}/`)}>‚Üê More {type} games</a>
  </p>
</Layout>
