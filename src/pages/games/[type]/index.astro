---
import Layout from '../../../components/Layout.astro';
import { getCollection } from 'astro:content';
import { excludeLegacyNoise } from '../../../lib/filters';

export async function getStaticPaths() {
  const all = excludeLegacyNoise(await getCollection('games'));
  const types = Array.from(new Set(all.map(e => e.data.type || 'misc')));
  return types.map((type) => ({ params: { type } }));
}

const { type } = Astro.params;
const items = excludeLegacyNoise(await getCollection('games'))
  .filter(e => (e.data.type || 'misc') === type)
  .sort((a,b) => (a.data.title || '').localeCompare(b.data.title || ''));
const base = import.meta.env.BASE_URL || '/';
---
<Layout title={`${type?.charAt(0).toUpperCase()}${type?.slice(1)} Games`}>
  <h1 class="font-display text-3xl mb-6">{type?.charAt(0).toUpperCase()}{type?.slice(1)} Games</h1>
  {items.length === 0 ? <p class="text-muted">No games of this type yet.</p> : (
    <ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
      {items.map(p => {
        const slug = (p.slug ?? p.id).split('/').pop();
        return (
          <li class="border border-fg/20 p-4">
            <a class="font-semibold hover:text-neon" href={`${base}games/${type}/${slug}`}>{p.data.title}</a>
            {p.data.tags?.length ? (
              <div class="text-xs text-muted mt-2">{p.data.tags.join(' â€¢ ')}</div>
            ) : null}
          </li>
        );
      })}
    </ul>
  )}
</Layout>
