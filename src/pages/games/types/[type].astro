---
import Layout from '../../../components/Layout.astro';
import { getCollection } from 'astro:content';
import { canonical } from '../../../lib/urls';
import { withBase } from '../../../lib/paths';

export async function getStaticPaths() {
  const games = await getCollection('games');
  const types = Array.from(new Set(games.map(g => g.data.type || 'misc')));
  return types.map(t => ({ params: { type: t } }));
}

const { type } = Astro.params;

const all = (await getCollection('games'))
  .filter(g => (g.data.type || 'misc') === type)
  .sort((a,b)=> a.data.title.localeCompare(b.data.title));

function labelPlayers(raw?: string) {
  if (!raw) return 'Unknown';
  const v = raw.toLowerCase();
  if (v.includes('team')) return 'Team';
  if (v.includes('pair')) return 'Pairs';
  if (v.includes('solo') || v.includes('single')) return 'Solo';
  return raw;
}

const pageCanonical = canonical(Astro.url.pathname, Astro.site);
const title = `${type} Games`;
const description = `All ${type} drinking games.`;
---
<Layout title={title} description={description} canonical={pageCanonical}>
  <h1 class="font-display text-4xl mb-6">{title}</h1>
  <p class="text-sm text-muted mb-6">
    {all.length} game{all.length !== 1 && 's'} in this category.
    <a class="hover:text-neon underline underline-offset-4 ml-4" href={withBase('games/')}>All Types</a>
    <a class="hover:text-neon underline underline-offset-4 ml-4" href={withBase('games/all/')}>Full Aâ€“Z</a>
  </p>

  {all.length === 0 ? (
    <p class="text-muted">No games found for this type.</p>
  ) : (
    <ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3 list-none p-0 m-0">
      {all.map(g => (
        <li class="border border-fg/15 hover:border-fg/40 transition-colors p-4">
          <a class="font-semibold hover:text-neon" href={withBase(`games/${g.slug}/`)}>{g.data.title}</a>
          <div class="text-xs text-muted mt-1 flex flex-wrap gap-2">
            {g.data.players && <span>{labelPlayers(g.data.players)}</span>}
            {g.data.tags?.length && <span>{g.data.tags.slice(0,3).join(', ')}</span>}
          </div>
        </li>
      ))}
    </ul>
  )}
</Layout>
