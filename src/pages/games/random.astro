---
import { getCollection } from 'astro:content';
import Layout from '../../components/Layout.astro';
import { withBase } from '../../lib/paths';

const pageTitle = 'Random Game';
const description = 'Redirecting you to a random drinking game.';

const games = await getCollection('games');

const rawPaths = games.map(g => {
  const parts = g.slug.split('/');
  const type = g.data.type || parts[0] || 'misc';
  const shortSlug = parts[parts.length - 1];
  return `games/${type}/${shortSlug}/`;
});

const uniq = Array.from(new Set(rawPaths));
const fullPaths = uniq.map(p => withBase(p));

const fallback = fullPaths.length
  ? fullPaths[Math.floor(Math.random() * fullPaths.length)]
  : null;
---

<Layout title={pageTitle} description={description} noindex={true}>
  <h1 class="font-display text-3xl mb-4">{pageTitle}</h1>

  {fullPaths.length === 0 ? (
    <p class="text-muted">No games available.</p>
  ) : (
    <>
      <p class="text-sm text-muted mb-6">
        Taking you to a random game...
        <span class="ml-2 animate-pulse">üçª</span>
      </p>
      <p class="text-xs text-muted">
        If nothing happens (e.g. JavaScript disabled), use the list below.
      </p>

      <noscript>
        <div class="mt-5">
          {fallback && (
            <p class="mb-4">
              <a class="underline hover:text-neon" href={fallback}>
                Go to a random game
              </a>
            </p>
          )}
          <ul class="columns-2 gap-6 text-xs list-none p-0 m-0">
            {fullPaths.slice(0, 40).map(p => (
              <li class="mb-1">
                <a
                  class="hover:text-neon underline underline-offset-4"
                  href={p}
                >
                  {p.replace(/.*games\//, '').replace(/\/$/, '')}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </noscript>

      <!-- Single guaranteed-working inline script -->
      <script
        is:inline
        set:html={`(function(){try{
          var paths = ${JSON.stringify(fullPaths)};
          if(!paths.length) return;
          var last; try{ last = sessionStorage.getItem('lastRandomGame'); }catch(_){}
          var pick = paths[Math.floor(Math.random()*paths.length)];
          if(paths.length>1 && pick===last){
            pick = paths[Math.floor(Math.random()*paths.length)];
          }
          try{ sessionStorage.setItem('lastRandomGame', pick); }catch(_){}
          window.location.replace(pick);
        }catch(e){ console.error('Random redirect failed', e); }} )();`}
      ></script>
    </>
  )}
</Layout>
