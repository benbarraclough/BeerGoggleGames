---
import { getCollection } from 'astro:content';
import Layout from '../../../components/Layout.astro';
import { withBase } from '../../../lib/paths';

// Collect all games
const games = await getCollection('games');

// Build client-side relative paths like "games/coin/arrogance/"
const paths = games.map(g => {
  const parts = g.slug.split('/');
  const type = g.data.type || parts[0] || 'misc';
  const shortSlug = parts[parts.length - 1];
  return `games/${type}/${shortSlug}/`;
});

// Safety: remove duplicates just in case
const uniq = Array.from(new Set(paths));

// Pick one at build time ONLY for a noscript fallback (not used for JS redirect randomness)
const fallback = uniq.length ? uniq[Math.floor(Math.random() * uniq.length)] : null;

const pageTitle = 'Random Game';
const description = 'Redirecting you to a random drinking game.';
---
<!DOCTYPE html>
<html lang="en" class="bg-bg text-fg font-body" data-base={import.meta.env.BASE_URL}>
  <head>
    <meta charset="utf-8" />
    <title>{pageTitle}</title>
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="robots" content="noindex, nofollow" />
    <script>
      // Inline script to redirect after DOM parse
      (function() {
        const base = document.documentElement.getAttribute('data-base') || '/';
        const paths = {JSON.stringify(uniq)};
        if (!paths.length) return;
        const pick = paths[Math.floor(Math.random() * paths.length)];
        // Ensure exactly one slash between base and pick
        const full = base.replace(/\/+$/, '/') + pick.replace(/^\/+/, '');
        window.location.replace(full);
      })();
    </script>
  </head>
  <body class="min-h-screen flex flex-col selection:bg-neon/40">
    <Layout title={pageTitle} description={description}>
      <h1 class="font-display text-3xl mb-4">{pageTitle}</h1>
      {uniq.length === 0 ? (
        <p class="text-muted">No games available.</p>
      ) : (
        <>
          <p class="text-sm text-muted mb-6">
            Taking you to a random game...
            <span class="ml-2 animate-pulse">üçª</span>
          </p>
          <p class="text-xs text-muted">
            If nothing happens automatically (JavaScript disabled), pick one below:
          </p>
          <noscript>
            <div class="mt-4">
              <p class="text-sm mb-3">Random (build-time) fallback:</p>
              {fallback && (
                <p class="mb-4">
                  <a class="underline hover:text-neon" href={withBase(fallback)}>Go to a random game</a>
                </p>
              )}
              <ul class="columns-2 gap-6 text-xs list-none p-0 m-0">
                {uniq.slice(0, 30).map(p => (
                  <li class="mb-1">
                    <a class="hover:text-neon underline underline-offset-4" href={withBase(p)}>{p.replace(/^games\//,'')}</a>
                  </li>
                ))}
              </ul>
            </div>
          </noscript>
        </>
      )}
    </Layout>
  </body>
</html>
