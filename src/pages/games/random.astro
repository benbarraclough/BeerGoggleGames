---
import { getCollection } from 'astro:content';
import Layout from '../../components/Layout.astro';
import { withBase } from '../../lib/paths';

const pageTitle = 'Random Game';
const description = 'Redirecting you to a random drinking game.';

const games = await getCollection('games');

// Build relative paths like "games/coin/arrogance/"
const paths = games.map(g => {
  const parts = g.slug.split('/');
  const type = g.data.type || parts[0] || 'misc';
  const shortSlug = parts[parts.length - 1];
  return `games/${type}/${shortSlug}/`;
});

const uniq = Array.from(new Set(paths));
const fallback = uniq.length
  ? uniq[Math.floor(Math.random() * uniq.length)]
  : null;
---

<Layout title={pageTitle} description={description} noindex={true}>
  <!-- Extra safeguard if Layout ignores noindex -->
  <meta name="robots" content="noindex, nofollow" />

  <h1 class="font-display text-3xl mb-4">{pageTitle}</h1>

  {uniq.length === 0 ? (
    <p class="text-muted">No games available.</p>
  ) : (
    <>
      <p class="text-sm text-muted mb-6">
        Taking you to a random game...
        <span class="ml-2 animate-pulse">üçª</span>
      </p>
      <p class="text-xs text-muted">
        If nothing happens (e.g. JavaScript disabled), use the list below.
      </p>

      <noscript>
        <div class="mt-5">
          {fallback && (
            <p class="mb-4">
              <a class="underline hover:text-neon" href={withBase(fallback)}>
                Go to a random game
              </a>
            </p>
          )}
          <ul class="columns-2 gap-6 text-xs list-none p-0 m-0">
            {uniq.slice(0, 40).map(p => (
              <li class="mb-1">
                <a
                  class="hover:text-neon underline underline-offset-4"
                  href={withBase(p)}
                >
                  {p.replace(/^games\//, '')}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </noscript>

      <script is:inline>
        {`
          (function() {
            var base = document.documentElement.getAttribute('data-base') || '/';
            var paths = ${JSON.stringify(uniq)};
            if(!paths.length) return;
            var pick = paths[Math.floor(Math.random() * paths.length)];
            var full = base.replace(/\\/+$/, '/') + pick.replace(/^\\/+/, '');
            // Prevent adding multiple history entries
            window.location.replace(full);
          })();
        `}
      </script>
    </>
  )}
</Layout>
