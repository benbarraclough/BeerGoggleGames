---
import Layout from '../../../components/Layout.astro';
import { getCollection } from 'astro:content';

const base = import.meta.env.BASE_URL || '/';
const games = await getCollection('games');
const types = [...new Set(games.map(g => g.data.type).filter(Boolean))].sort();
const pageTitle = 'Random Game';
---
<Layout title={pageTitle} description="Pick a random drinking game (optionally filtered by type).">
  <section class="prose max-w-none">
    <h1>{pageTitle}</h1>
    <p>Select a type (optional) then pick a random game.</p>
    <div class="flex flex-wrap gap-2 items-center">
      <label>
        <span class="sr-only">Type</span>
        <select id="typeSel" class="border rounded px-2 py-1">
          <option value="">Any Type</option>
          {types.map(t => <option value={t}>{t}</option>)}
        </select>
      </label>
      <button id="btn" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Random Game</button>
      <span id="out" class="text-sm text-gray-600"></span>
    </div>
  </section>
  <script type="module">
    const base = import.meta.env.BASE_URL || '/';
    const games = {JSON.stringify(games.map(g => ({ slug: g.slug, title: g.data.title, type: g.data.type })))}; // embedded dataset
    const btn = document.getElementById('btn');
    const sel = document.getElementById('typeSel');
    const out = document.getElementById('out');

    function pick() {
      const t = sel.value;
      const pool = t ? games.filter(g => g.type === t) : games;
      if (!pool.length) {
        out.textContent = 'No games for that type.';
        return;
      }
      const choice = pool[Math.floor(Math.random() * pool.length)];
      out.innerHTML = `â†’ <a class="text-blue-600 underline" href='${base}games/${choice.slug}/'>${choice.title}</a>`;
    }
    btn.addEventListener('click', pick);
  </script>
</Layout>
