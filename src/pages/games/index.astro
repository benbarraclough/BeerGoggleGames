---
import Layout from '../../components/Layout.astro';
import { getCollection } from 'astro:content';
import { excludeLegacyNoise } from '../../lib/filters';
import { withBase } from '../../lib/paths';
import { canonical } from '../../lib/urls';

const games = excludeLegacyNoise(await getCollection('games'));
const byType = new Map<string, { count: number; examples: string[] }>();
for (const g of games) {
  const rawType = g.data.type || 'misc';
  if (!byType.has(rawType)) byType.set(rawType, { count: 0, examples: [] });
  const bucket = byType.get(rawType)!;
  bucket.count++;
  if (bucket.examples.length < 3) bucket.examples.push(g.data.title);
}
const typeEntries = Array.from(byType.entries()).sort((a,b)=> a[0].localeCompare(b[0]));

function displayTypeLabel(slug: string) {
  if(!slug) return 'Games';
  const cap = slug.charAt(0).toUpperCase() + slug.slice(1);
  if (/games$/i.test(cap)) return cap;
  return `${cap} Games`;
}

const pageCanonical = canonical(Astro.url.pathname, Astro.site);
---
<Layout
  title="Game Types"
  description="Browse drinking games by category."
  canonical={pageCanonical}
>
  <h1 class="font-display text-3xl mb-6">Game Types</h1>
  <p class="text-sm text-muted mb-6">
    Browse all categories. Click a type to view its games. Or view
    <a class="hover:text-neon underline underline-offset-4 mx-1" href={withBase('games/all/')}>the full A–Z list</a>.
  </p>

  {typeEntries.length === 0 ? (
    <p class="text-muted">No games found.</p>
  ) : (
    <ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 list-none p-0 m-0">
      {typeEntries.map(([type, info]) => (
        <li class="border border-fg/20 p-4 flex flex-col rounded-sm hover:border-neon/40 transition-colors">
          <a
            class="font-semibold hover:text-neon leading-snug"
            href={withBase(`games/${type}/`)}
          >
            {displayTypeLabel(type)}
          </a>
          <div class="text-xs text-muted mt-1 tracking-tight">
            {info.count} game{info.count !== 1 && 's'}
          </div>
          {info.examples.length > 0 && (
            <ul class="mt-3 text-sm space-y-1 text-muted list-disc list-inside">
              {info.examples.map(ex => <li>{ex}</li>)}
            </ul>
          )}
        </li>
      ))}
    </ul>
  )}

  <div class="mt-10 text-sm flex flex-wrap gap-6">
    <a class="hover:text-neon underline underline-offset-4" href={withBase('games/all/')}>All Games (A–Z)</a>
    <a class="hover:text-neon underline underline-offset-4" href={withBase('games/formats/')}>Formats</a>
    <a class="hover:text-neon underline underline-offset-4" href={withBase('games/random')}>Random Game</a>
    <a class="hover:text-neon underline underline-offset-4" href={withBase('tags/')}>Tags</a>
    <a class="hover:text-neon underline underline-offset-4" href={withBase('search')}>Search</a>
  </div>
</Layout>
