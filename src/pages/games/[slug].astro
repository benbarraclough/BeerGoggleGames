---
import Layout from '../../components/Layout.astro';
import { getCollection } from 'astro:content';
import RelatedGames from '../../components/RelatedGames.astro';
import StructuredData from '../../components/StructuredData.astro';
import { withBase } from '../../lib/paths';
import { canonical } from '../../lib/urls';
import { gameLD } from '../../lib/schema';

export async function getStaticPaths() {
  const games = await getCollection('games');
  return games.map(g => ({ params: { slug: g.slug }, props: { entry: g } }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const title = entry.data.title;
const type = entry.data.type;
const description = entry.data.excerpt || `How to play ${title}.`;
const pageCanonical = canonical(Astro.url.pathname, Astro.site);

const ld = gameLD({
  title,
  description,
  type,
  url: pageCanonical
});
---
<Layout title={title} description={description} canonical={pageCanonical}>
  <article class="prose prose-invert max-w-none">
    {type && <p><strong>Type:</strong> {type}</p>}
    <Content />
  </article>

  {type && (
    <div class="mt-10">
      <RelatedGames currentSlug={entry.slug} currentType={type} />
    </div>
  )}

  <p class="mt-8">
    <a class="hover:text-neon" href={withBase('games/')}>‚Üê All Games</a>
  </p>

  <StructuredData data={ld} />
</Layout>
