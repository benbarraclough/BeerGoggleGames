---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const PER_PAGE = 40; // MUST be above getStaticPaths

export async function getStaticPaths() {
  const games = await getCollection('games');
  const totalPages = Math.ceil(games.length / PER_PAGE);
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: String(i + 1) },
    props: { currentPage: i + 1, totalPages }
  }));
}

const base = import.meta.env.BASE_URL || '/';
const { currentPage, totalPages } = Astro.props;
const all = (await getCollection('games')).sort((a,b)=> a.data.title.localeCompare(b.data.title));
const start = (currentPage - 1) * PER_PAGE;
const items = all.slice(start, start + PER_PAGE);
const pageTitle = `Games – Page ${currentPage}`;
---
<Layout title={pageTitle}>
  <section class="prose max-w-none">
    <h1>{pageTitle}</h1>
    <p>Total games: {all.length} (Page {currentPage} of {totalPages})</p>
    <ul class="columns-1 sm:columns-2 lg:columns-3 gap-4 !mt-4">
      {items.map(g => (
        <li class="break-inside-avoid">
          <a class="text-blue-600 hover:underline" href={`${base}games/${g.slug}/`}>{g.data.title}</a>
          {g.data.type && <small class="text-gray-500"> ({g.data.type})</small>}
        </li>
      ))}
    </ul>
    <nav class="mt-6 space-x-4">
      {currentPage > 1 && <a class="text-blue-600 hover:underline" href={`${base}games/page/${currentPage - 1}/`}>← Prev</a>}
      {currentPage < totalPages && <a class="text-blue-600 hover:underline" href={`${base}games/page/${currentPage + 1}/`}>Next →</a>}
      <a class="text-blue-600 hover:underline" href={`${base}games/`}>First Page</a>
    </nav>
  </section>
</Layout>
