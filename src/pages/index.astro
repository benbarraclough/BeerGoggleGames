---
import Layout from '../components/Layout.astro';
import { getCollection } from 'astro:content';
import { excludeLegacyNoise } from '../lib/filters';
import { withBase } from '../lib/paths';
import { canonical } from '../lib/urls';
import CardLink from '../components/CardLink.astro';

const allGames = excludeLegacyNoise(await getCollection('games'));
const recentGames = allGames.slice(0, 6);

const posts = excludeLegacyNoise(await getCollection('posts'))
  .filter(p => !p.data.draft)
  .sort((a,b) => (b.data.date || '').localeCompare(a.data.date || ''))
  .slice(0, 3);

const cocktails = excludeLegacyNoise(await getCollection('cocktails')).slice(0,3);
const shots = excludeLegacyNoise(await getCollection('shots')).slice(0,3);

const pageCanonical = canonical(Astro.url.pathname, Astro.site);
---
<Layout title="BeerGoggleGames" description="Drinking games, cocktails & shots, forfeits, glossary and wheel tools." canonical={pageCanonical} wide={true}>
  <!-- HERO -->
  <section class="relative overflow-hidden rounded-lg border border-fg/15 mb-12 bg-gradient-to-br from-fg/5 via-fg/0 to-neon/10">
    <div class="absolute inset-0 pointer-events-none opacity-40 mix-blend-overlay radial-fade"></div>
    <div class="relative px-6 py-14 md:py-20 flex flex-col gap-8 md:flex-row md:items-center md:justify-between">
      <div class="max-w-xl space-y-5">
        <h1 class="font-display text-4xl md:text-5xl leading-tight tracking-tight">Party Faster. Play Smarter.</h1>
        <p class="text-muted text-lg leading-relaxed">
          Discover streamlined drinking games, curated cocktails, shot recipes, creative forfeits
          and quick decision tools. Minimal fluff. Maximum fun.
        </p>
        <div class="flex flex-wrap gap-3">
          <a href={withBase('games/')} class="px-5 py-3 rounded border border-fg/25 bg-fg/10 hover:border-neon hover:text-neon text-sm font-medium tracking-wide">
            Browse Games
          </a>
          <a href={withBase('extras/wheel-of-fortune/')} class="px-5 py-3 rounded border border-neon/40 text-neon hover:bg-neon/10 text-sm font-medium tracking-wide">
            Spin a Wheel →
          </a>
        </div>
      </div>
      <div class="w-full max-w-sm md:max-w-md">
        <label class="text-xs uppercase tracking-wide text-muted font-medium block mb-2">
          Quick Search
          <input
            id="home-search"
            type="search"
            placeholder="Search games & drinks..."
            class="mt-2 w-full rounded-md border border-fg/30 bg-bg/70 backdrop-blur px-4 py-3 text-sm focus:border-neon outline-none"
            autocomplete="off"
          />
        </label>
        <div id="home-results" class="mt-3 space-y-2 text-sm max-h-72 overflow-y-auto hidden border border-fg/15 rounded-md p-3 bg-bg/80 backdrop-blur">
          <p class="text-xs text-muted">Type to search...</p>
        </div>
      </div>
    </div>
  </section>

  <!-- SHORTCUTS -->
  <section class="mb-14">
    <h2 class="font-display text-2xl mb-5">Quick Access</h2>
    <ul class="grid gap-5 sm:grid-cols-2 lg:grid-cols-4 list-none p-0 m-0">
      {[
        { label: 'Random Game', href: withBase('games/random'), desc: 'Let fate decide your next play.' },
        { label: 'Forfeits', href: withBase('extras/forfeits'), desc: 'Creative penalties & challenges.' },
        { label: 'Glossary', href: withBase('extras/glossary'), desc: 'Decode the drinking jargon.' },
        { label: 'Wheel Tool', href: withBase('extras/wheel-of-fortune'), desc: 'Spin categories & games.' }
      ].map(i => (
        <li class="group border border-fg/15 rounded-lg p-5 hover:border-neon transition-colors bg-fg/5/10">
          <a href={i.href} class="flex flex-col gap-2 h-full focus:outline-none focus:ring-2 focus:ring-neon rounded">
            <span class="font-semibold group-hover:text-neon">{i.label}</span>
            <span class="text-xs text-muted leading-snug">{i.desc}</span>
          </a>
        </li>
      ))}
    </ul>
  </section>

  <!-- LATEST GAMES -->
  <section class="mb-14">
    <header class="flex items-center justify-between mb-4">
      <h2 class="font-display text-2xl">Latest Games</h2>
      <a class="text-xs uppercase tracking-wide hover:text-neon underline underline-offset-4" href={withBase('games/')}>All Games</a>
    </header>
    <ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 list-none p-0 m-0">
      {recentGames.map(g => {
        const slug = (g.slug ?? g.id).split('/').pop();
        const href = withBase(`games/${slug}/`);
        return (
          <CardLink href={href} ariaLabel={`View game: ${g.data.title}`}>
            <span class="font-semibold leading-snug transition-colors group-hover:text-neon">
              {g.data.title}
            </span>
            {g.data.excerpt && <span class="mt-2 text-[11px] text-muted line-clamp-3">{g.data.excerpt}</span>}
          </CardLink>
        );
      })}
    </ul>
  </section>

  <!-- DRINKS -->
  <section class="mb-14">
    <h2 class="font-display text-2xl mb-5">Popular Drinks</h2>
    <div class="grid gap-8 lg:grid-cols-2">
      <div>
        <h3 class="font-semibold mb-3">Cocktails</h3>
        <ul class="grid gap-3 list-none p-0 m-0">
          {cocktails.map(c => {
            const slug = (c.slug ?? c.id).split('/').pop();
            return (
              <CardLink
                href={withBase(`drinks/${slug}/`)}
                ariaLabel={`View cocktail: ${c.data.title}`}
                as="li"
                noPadding
                anchorClass="p-3"
              >
                <span class="font-medium transition-colors group-hover:text-neon">
                  {c.data.title}
                </span>
              </CardLink>
            );
          })}
        </ul>
        <p class="mt-3 text-xs">
          <a class="hover:text-neon underline underline-offset-4" href={withBase('drinks/')}>
            All drinks →
          </a>
        </p>
      </div>
      <div>
        <h3 class="font-semibold mb-3">Shots</h3>
        <ul class="grid gap-3 list-none p-0 m-0">
          {shots.map(s => {
            const slug = (s.slug ?? s.id).split('/').pop();
            return (
              <CardLink
                href={withBase(`drinks/${slug}/`)}
                ariaLabel={`View shot: ${s.data.title}`}
                as="li"
                noPadding
                anchorClass="p-3"
              >
                <span class="font-medium transition-colors group-hover:text-neon">
                  {s.data.title}
                </span>
              </CardLink>
            );
          })}
        </ul>
      </div>
    </div>
  </section>

  <!-- BLOG (still accessible but no header/footer nav link) -->
  {posts.length > 0 && (
    <section class="mb-16">
      <header class="flex items-center justify-between mb-4">
        <h2 class="font-display text-2xl">From the Blog</h2>
        <a class="text-xs uppercase tracking-wide hover:text-neon underline underline-offset-4" href={withBase('extras/blog/')}>All Posts</a>
      </header>
      <ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3 list-none p-0 m-0">
        {posts.map(p => {
          const slug = (p.slug ?? p.id).split('/').pop();
          return (
            <CardLink
              href={withBase(`extras/blog/${slug}/`)}
              ariaLabel={`Read post: ${p.data.title}`}
            >
              <span class="font-semibold leading-snug transition-colors group-hover:text-neon">
                {p.data.title}
              </span>
              {p.data.excerpt && (
                <span class="mt-2 text-xs text-muted line-clamp-3">
                  {p.data.excerpt}
                </span>
              )}
            </CardLink>
          );
        })}
      </ul>
    </section>
  )}

  <script is:inline>
    (() => {
      const input = document.getElementById('home-search');
      const results = document.getElementById('home-results');
      if(!input || !results) return;

      let dataset = [];

      async function load() {
        // Lightweight client-side list (could be pre-generated)
        // For now we infer a minimal list from DOM (games + cocktails + shots)
        const links = Array.from(document.querySelectorAll('a[href*="/games/"], a[href*="/drinks/"]'));
        dataset = links.map(a => ({
          title: a.textContent.trim(),
          href: a.getAttribute('href'),
          type: a.href.includes('/games/') ? 'game' : 'drink'
        }));
      }

      function render(list) {
        results.innerHTML = '';
        if(!list.length) {
          results.innerHTML = '<p class="text-xs text-muted">No matches.</p>';
        } else {
          const ul = document.createElement('ul');
            ul.className = 'list-none m-0 p-0 space-y-1';
          list.slice(0, 25).forEach(item => {
            const li = document.createElement('li');
            li.innerHTML = '<a class="block px-2 py-1 rounded hover:text-neon hover:bg-fg/5 text-sm" href="'+ item.href +'">'+ item.title +'</a>';
            ul.appendChild(li);
          });
          results.appendChild(ul);
        }
        results.classList.toggle('hidden', false);
      }

      input.addEventListener('input', () => {
        const q = input.value.trim().toLowerCase();
        if(!q) { results.classList.add('hidden'); return; }
        const filtered = dataset.filter(d => d.title.toLowerCase().includes(q));
        render(filtered);
      });

      load();
    })();
  </script>

  <style>
    .radial-fade {
      background:
        radial-gradient(circle at 20% 30%, rgba(var(--neon-rgb,255,0,128),0.25), transparent 60%),
        radial-gradient(circle at 80% 70%, rgba(var(--neon-rgb,255,0,128),0.18), transparent 65%);
    }
  </style>
</Layout>
