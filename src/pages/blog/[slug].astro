---
import Layout from '../../layouts/Layout.astro';
import StructuredData from '../../components/StructuredData.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts').catch(() => []); // uses src/content/posts
  return posts.map(p => ({
    params: { slug: p.slug },
    props: { entry: p }
  }));
}

const base = import.meta.env.BASE_URL || '/';
const { entry } = Astro.props;
const title = entry?.data?.title || 'Post';
if (!entry) {
  throw new Error('Post not found');
}
const description = entry.data.excerpt || entry.data.description || '';
const date = entry.data.date ? new Date(entry.data.date) : null;
const canonical = new URL(Astro.url.pathname, Astro.site ?? 'https://benbarraclough.github.io/BeerGoggleGames').toString();
const authorName = entry.data.author || 'Beer Goggle Games';
const image = entry.data.image || entry.data.hero || null;
const blogLd = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  description,
  datePublished: date ? date.toISOString() : undefined,
  dateModified: date ? date.toISOString() : undefined,
  author: { '@type': 'Person', name: authorName },
  publisher: { '@type': 'Organization', name: 'Beer Goggle Games' },
  url: canonical,
  image: image ? [image.startsWith('http') ? image : `${base}images/${image.replace(/^\/+/, '')}`] : undefined,
  inLanguage: 'en'
};
---
<Layout title={title} description={description}>
  <article class="prose max-w-none">
    <h1>{title}</h1>
    {date && <p><time dateTime={date.toISOString()}>{date.toDateString()}</time></p>}
    <div set:html={entry.body} />
  </article>

  <p class="mt-8">
    <a class="text-blue-600 hover:underline" href={`${base}blog/`}>‚Üê All Posts</a>
  </p>

  <StructuredData data={blogLd} />
</Layout>
