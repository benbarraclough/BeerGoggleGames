---
import Layout from '../../components/Layout.astro';
import StructuredData from '../../components/StructuredData.astro';
import { getCollection } from 'astro:content';
import { canonical, imageUrl } from '../../lib/urls';
import { withBase } from '../../lib/paths';

export async function getStaticPaths() {
  const posts = await getCollection('posts').catch(()=>[]);
  return posts.map(p => ({ params: { slug: p.slug }, props: { entry: p } }));
}

const { entry } = Astro.props;
if (!entry) throw new Error('Post not found');
const { Content } = await entry.render();

const title = entry.data.title || 'Post';
const description = entry.data.excerpt || entry.data.description || '';
const date = entry.data.date ? new Date(entry.data.date) : null;
const authorName = entry.data.author || 'Beer Goggle Games';
const image = entry.data.image || entry.data.hero || null;
const pageCanonical = canonical(Astro.url.pathname, Astro.site);
const img = image ? imageUrl(image) : undefined;

const blogLd = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  description,
  datePublished: date ? date.toISOString() : undefined,
  dateModified: date ? date.toISOString() : undefined,
  author: { '@type': 'Person', name: authorName },
  publisher: { '@type': 'Organization', name: 'Beer Goggle Games' },
  url: pageCanonical,
  image: img ? [img] : undefined,
  inLanguage: 'en'
};
---
<Layout title={title} description={description} canonical={pageCanonical}>
  <article class="prose prose-invert max-w-none">
    <h1 class="!mb-4 !leading-tight !text-fg font-display text-3xl md:text-4xl">{title}</h1>
    {date && (
      <p class="!mt-0 text-sm text-muted">
        <time datetime={date.toISOString()}>{date.toDateString()}</time>
      </p>
    )}
    <Content />
  </article>

  <p class="mt-10">
    <a class="hover:text-neon underline underline-offset-4" href={withBase('blog/')}>‚Üê All Posts</a>
  </p>

  <StructuredData data={blogLd} />
</Layout>
