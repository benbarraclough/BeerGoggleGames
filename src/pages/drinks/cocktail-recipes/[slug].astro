---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import RelatedCocktails from '../../../components/RelatedCocktails.astro';
import StructuredData from '../../../components/StructuredData.astro';

export async function getStaticPaths() {
  const cocktails = await getCollection('cocktails'); // adjust if your collection id differs
  return cocktails.map(c => ({
    params: { slug: c.slug },
    props: { entry: c }
  }));
}

const base = import.meta.env.BASE_URL || '/';
const { entry } = Astro.props;
const title = entry.data.title;
const ingredientsRaw = entry.data.ingredients || [];
// Support both array of strings OR objects with name field
const ingredients = ingredientsRaw.map(i =>
  typeof i === 'string' ? i : (i.name || i.ingredient || JSON.stringify(i))
);
const method = entry.data.method || entry.data.instructions || '';
const description = entry.data.excerpt || `Cocktail recipe: ${title}.`;
const canonical = new URL(Astro.url.pathname, Astro.site ?? 'https://benbarraclough.github.io/BeerGoggleGames').toString();

// Attempt image(s) from frontmatter
const image = entry.data.image || entry.data.images?.[0] || null;

// JSON-LD Recipe schema
const recipeLd = {
  '@context': 'https://schema.org',
  '@type': 'Recipe',
  name: title,
  description,
  recipeCategory: 'Cocktail',
  recipeCuisine: 'International',
  recipeIngredient: ingredients,
  recipeInstructions: method ? [{ '@type': 'HowToStep', text: method }] : undefined,
  image: image ? [image.startsWith('http') ? image : `${base}images/${image.replace(/^\/+/, '')}`] : undefined,
  url: canonical,
  inLanguage: 'en'
};
---
<Layout title={title} description={description}>
  <article class="prose max-w-none">
    <h1>{title}</h1>
    {ingredients.length > 0 && (
      <>
        <h2>Ingredients</h2>
        <ul>
          {ingredients.map(i => <li>{i}</li>)}
        </ul>
      </>
    )}
    {method && (
      <>
        <h2>Method</h2>
        <p>{method}</p>
      </>
    )}
    <div set:html={entry.body} />
  </article>

  <div class="mt-10">
    <RelatedCocktails currentSlug={entry.slug} ingredients={ingredients} />
  </div>

  <p class="mt-8">
    <a class="text-blue-600 hover:underline" href={`${base}drinks/cocktail-recipes/`}>‚Üê All Cocktails</a>
  </p>

  <StructuredData data={recipeLd} />
</Layout>
