---
import Layout from '../../components/Layout.astro';
import { getCollection, getEntry } from 'astro:content';
import DrinkMeta from '../../components/drink/DrinkMeta.astro';
import GameHero from '../../components/game/GameHero.astro'; // Re-using existing hero component
import { canonical } from '../../lib/urls';
import { withBase } from '../../lib/paths';

export async function getStaticPaths() {
  const entries = await getCollection('drinks');
  return entries.map(e => {
    const slug = (e.slug ?? e.id);
    return { params: { slug } };
  });
}

const rawSlug = Astro.params.slug;
const slug = rawSlug.replace(/\.mdx$/i, '');

let entry = await getEntry('drinks', slug);
if (!entry) {
  const all = await getCollection('drinks');
  const available = all.map(e => e.slug ?? e.id).join(', ');
  throw new Error(`Drink not found for slug "${slug}". Available: ${available}`);
}

const { Content } = await entry.render();
const cover = entry.data.cover
  ? withBase(`images/${entry.data.cover}`)
  : withBase(`images/${slug}.webp`);
const pageCanonical = canonical(Astro.url.pathname, Astro.site);
const title = entry.data.title;
const description = entry.data.excerpt || `Drink recipe: ${title}`;

const bases = (entry.data.bases && entry.data.bases.length)
  ? entry.data.bases
  : (entry.data.base ? [entry.data.base] : []);

const drinkType = entry.data.drinkType;
const difficulty = entry.data.difficulty;
const tags = entry.data.tags || [];

/**
 * If MDX files still contain a <DrinkHero>, we do NOT want a double hero.
 * Quick heuristic: do a cheap string check on the original source (entry.body).
 * (entry.body is available in content entry; fallback showHero=true if not.)
 */
const originalSource: string = (entry as any).body || '';
const mdxHasDrinkHero = /<DrinkHero\b/i.test(originalSource) || /<GameHero\b/i.test(originalSource);
const showHero = !mdxHasDrinkHero;
---
<Layout title={title} description={description} canonical={pageCanonical}>
  <article class="prose-invert max-w-none">
    <DrinkMeta
      title={title}
      excerpt={description}
      drinkType={drinkType}
      difficulty={difficulty}
      bases={bases}
      tags={tags}
    />

    {showHero && (
      <GameHero cover={cover} alt={title} />
    )}

    <Content />
  </article>
</Layout>
