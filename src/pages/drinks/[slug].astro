---
import Layout from '../../components/Layout.astro';
import { getCollection, getEntry } from 'astro:content';
import { withBase } from '../../lib/paths';
import { canonical } from '../../lib/urls';

export async function getStaticPaths() {
  const entries = await getCollection('drinks');
  return entries.map(e => ({
    params: { slug: (e.slug ?? e.id).split('/').pop() },
    props: { id: e.id }
  }));
}

const { id } = Astro.props;
const entry = await getEntry('drinks', id);
if (!entry) throw new Error(`Drink entry not found: ${id}`);

const slug = (entry.slug ?? entry.id).split('/').pop();
const { Content } = await entry.render();

const cover = entry.data.cover
  ? withBase(`images/${entry.data.cover}`)
  : withBase(`images/${slug}.webp`);

const pageCanonical = canonical(Astro.url.pathname, Astro.site);
const pageTitle = entry.data.title;
const description = entry.data.excerpt || `Drink recipe: ${pageTitle}`;
---
<Layout
  title={pageTitle}
  description={description}
  canonical={pageCanonical}
>
  <article class="prose-invert max-w-none">
    <Content />
  </article>
</Layout>
