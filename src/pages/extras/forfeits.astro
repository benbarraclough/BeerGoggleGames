---
import Layout from '../../components/Layout.astro';
import ShareButtons from '../../components/game/ShareButtons.astro';
import FeedbackCard from '../../components/game/FeedbackCard.astro';

const title = 'Forfeits';
const description = 'Creative punishments & challenges to add spice to any drinking game – searchable & collapsible.';

interface Forfeit { id: string; name: string; desc: string; terms: string; }

const forfeits: Forfeit[] = [
  { id:'all-fours', name:'All Fours', desc:'Travel everywhere on hands and knees for the agreed time.', terms:'all fours degrading movement crawl' },
  { id:'beer-bong', name:'Beer Bong', desc:'Finish a full drink through a funnel & tube without stopping.', terms:'beer bong funnel chug' },
  { id:'cheese-on-crackers', name:'Cheese On Crackers', desc:'Shave a thin slice of soap, place it on a cracker and eat it.', terms:'cheese on crackers soap eating gross' },
  { id:'chug-cup', name:'Chug Cup', desc:'Everyone donates a little to a cup; you must drink the mystery mix.', terms:'chug cup mix everyone donate combined' },
  { id:'dancing-monkey', name:'Dancing Monkey', desc:'Dance on command for the entire duration of the penalty.', terms:'dancing monkey dance anytime demanded' },
  { id:'edward-ciderhands', name:'Edward Ciderhands', desc:'A bottle taped to each hand; remove only after both are empty.', terms:'edward ciderhands bottles taped hands' },
  { id:'dice-of-doom', name:'Dice of Doom', desc:'Pick a number; roll until it appears 3 times. Every other roll = drink.', terms:'dice of doom luck rolling number drink' },
  { id:'disabled', name:'Disabled', desc:'One limb taped/immobilised for the agreed time period.', terms:'disabled limb taped handicap' },
  { id:'flirt', name:'Flirt', desc:'Flirt with a chosen target for the set duration (respect boundaries).', terms:'flirt social confidence challenge' },
  { id:'flour-power', name:'Flour Power', desc:'Eat a spoonful of flour. No liquid additions. (Choking risk—caution.)', terms:'flour power eating spoon dry' },
  { id:'concussion', name:'Concussion', desc:'Open a can only with your head, then finish it. (Not recommended.)', terms:'concussion head can open' },
  { id:'dilemma', name:'Dilemma', desc:'Pick one from several “evil” drink options (bad shot, large drink, etc.).', terms:'dilemma choose evil options drink' },
  { id:'flaming-shot', name:'Flaming Shot', desc:'Light a high‑proof shot then drink. High risk. Usually skip for safety.', terms:'flaming shot fire high proof risk' },
  { id:'go-live', name:'Go Live', desc:'Go live on a social platform for 10 minutes with someone visible on screen.', terms:'go live social media broadcast' },
  { id:'graffiti', name:'Graffiti', desc:'Someone draws on you with a marker anywhere they choose.', terms:'graffiti marker draw body' },
  { id:'ice-t', name:'Ice-T', desc:'Wear a pre‑frozen soaked t‑shirt until it thaws.', terms:'ice-t frozen shirt cold wearable' },
  { id:'leash', name:'Leash', desc:'Choose an “owner” who holds your leash/belt for the duration.', terms:'leash owned belt control' },
  { id:'outcast', name:'Outcast', desc:'Everyone must ignore you (no eye contact or speech).', terms:'outcast social ignore isolation' },
  { id:'shit-shave', name:'Shit Shave', desc:'A chosen person shaves a body area of their choice.', terms:'shit shave hair removal' },
  { id:'shot-roulette', name:'Shot Roulette', desc:'Multiple mystery shots; blind pick one and drink.', terms:'shot roulette mystery blind pick' },
  { id:'sock-it', name:'Sock It', desc:'Drink a beverage through someone’s sock over the rim.', terms:'sock it drink through sock' },
  { id:'spinning-mad', name:'Spinning Mad', desc:'Spin a coin & stop it once with each hand.', terms:'spinning mad coin control precision' },
  { id:'the-salon', name:'The Salon', desc:'Someone applies fake tan to a body part you expose.', terms:'the salon fake tan apply' },
  { id:'toilet-troll', name:'Toilet Troll', desc:'Loiter in a bathroom “offering help”.', terms:'toilet troll bathroom awkward' },
  { id:'tp', name:'TP', desc:'Eat one square of plain toilet paper.', terms:'tp toilet paper eat' },
  { id:'winters-coming', name:'Winters Coming', desc:'Put on 3 extra clothing layers.', terms:'winters coming extra layers warmth' },
  { id:'50-shades', name:'50 Shades', desc:'Seductively read a chosen passage.', terms:'50 shades seductive reading performance' }
];
---
<Layout title={title} description={description}>
  <header class="mb-8">
    <h1 class="font-display text-3xl md:text-4xl mb-3">{title}</h1>
    <p class="text-muted max-w-prose">{description}</p>
  </header>

  <div class="my-6 flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
    <div class="flex flex-col gap-2">
      <label class="text-xs uppercase tracking-wide text-muted font-medium">
        Search
        <input
          id="forfeit-search"
          type="search"
          placeholder="Find a forfeit..."
          class="mt-1 w-72 max-w-[80vw] rounded border border-fg/25 bg-fg/5 px-3 py-2 text-sm focus:border-neon outline-none"
          autocomplete="off"
        />
      </label>
      <button id="forfeit-clear" class="hidden self-start text-[11px] underline underline-offset-4 hover:text-neon">Clear</button>
    </div>
    <p class="text-[11px] text-muted max-w-sm leading-relaxed">
      Play responsibly. Swap or veto any forfeit that risks injury, non‑consent, or humiliation beyond comfort.
    </p>
  </div>

  <style>
    .toggle-hide { display: none; }
    details[open] .toggle-view { display: none; }
    details[open] .toggle-hide { display: inline; }
  </style>

  <section id="forfeit-list" class="space-y-3">
    {forfeits.map(f => (
      <details
        id={f.id}
        class="group rounded border border-fg/15 p-4 open:border-neon transition-colors"
        data-term={(f.name + ' ' + f.terms).toLowerCase()}
      >
        <summary class="cursor-pointer font-semibold flex justify-between items-center">
          <span>{f.name}</span>
          <span class="text-xs text-muted group-open:text-neon">
            <span class="toggle-view">View</span>
            <span class="toggle-hide">Hide</span>
          </span>
        </summary>
        <p class="mt-3 text-sm text-muted leading-relaxed">{f.desc}</p>
      </details>
    ))}
  </section>

  <p id="forfeit-empty" class="hidden italic text-muted mt-8">No forfeits match your search.</p>

  <ShareButtons title={title} />
  <FeedbackCard>
    <p>Suggest a new forfeit, improvement, or flag safety issues.</p>
  </FeedbackCard>

  <script is:inline>
    (() => {
      const input = document.getElementById('forfeit-search');
      const clear = document.getElementById('forfeit-clear');
      const empty = document.getElementById('forfeit-empty');
      const items = Array.from(document.querySelectorAll('#forfeit-list details'));
      if (!input) return;
      function apply() {
        const q = input.value.trim().toLowerCase();
        let visible = 0;
        items.forEach(d => {
          const term = d.getAttribute('data-term') || '';
          const match = !q || term.includes(q);
          d.classList.toggle('hidden', !match);
          if (match) visible++;
        });
        empty.classList.toggle('hidden', visible !== 0);
        clear.classList.toggle('hidden', q.length === 0);
      }
      input.addEventListener('input', apply);
      clear?.addEventListener('click', () => { input.value=''; apply(); input.focus(); });
      apply();
    })();
  </script>
</Layout>
