---
import '../styles.css';
import Analytics from './Analytics.astro';
import SkipLink from './SkipLink.astro';
import { base, withBase } from '../lib/paths';

interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
  canonical?: string;
  wide?: boolean;
  fullBleed?: boolean;
}

const {
  title = 'Beer Goggle Games',
  description = 'Drinking games, cocktails, party activities & more.',
  ogImage,
  canonical,
  wide = false,
  fullBleed = false
} = Astro.props as Props;

const current = Astro.url.pathname;
function isActive(segment: string) {
  const normalized = segment.endsWith('/') ? segment : segment + '/';
  return current.startsWith(withBase(normalized));
}

const mainClass = [
  'grow mx-auto w-full px-4 py-8',
  fullBleed ? '' : (wide ? 'max-w-7xl' : 'max-w-6xl')
].join(' ');

const navLinks = [
  { href: withBase('games/'), label: 'Games', key: 'games' },
  { href: withBase('drinks/'), label: 'Drinks', key: 'drinks' },
  { href: withBase('extras/'), label: 'Extras', key: 'extras' },
  { href: withBase('blog/'), label: 'Blog', key: 'blog' },
  { href: withBase('search'), label: 'Search', key: 'search' },
  { href: withBase('contact'), label: 'Contact', key: 'contact' }
];
---
<!DOCTYPE html>
<html lang="en" class="bg-bg text-fg font-body antialiased" data-base={base}>
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    {canonical && <link rel="canonical" href={canonical} />}
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    {ogImage && <meta property="og:image" content={withBase(ogImage.replace(/^\/+/, ''))} />}
  </head>
  <body class="min-h-screen flex flex-col selection:bg-neon/40">
    <SkipLink />
    <header class="border-b border-fg/20">
      <div class="mx-auto max-w-7xl px-4 py-4 flex items-center justify-between">
        <a href={withBase()} class="font-display text-2xl tracking-tight hover:text-neon">
          BeerGoggleGames
        </a>
        {/* Desktop Nav */}
        <nav class="hidden lg:flex flex-wrap gap-6 text-sm" aria-label="Primary">
          {navLinks.map(link => (
            <a
              href={link.href}
              class:list={['hover:text-neon', isActive(link.key) && 'text-neon font-semibold']}
              aria-current={isActive(link.key) ? 'page' : undefined}
            >
              {link.label}
            </a>
          ))}
        </nav>
        {/* Mobile Toggle */}
        <button
          id="nav-toggle"
            class="lg:hidden inline-flex items-center gap-2 border border-fg/30 px-3 py-2 text-sm rounded hover:border-neon hover:text-neon"
          aria-controls="mobile-nav"
          aria-expanded="false"
        >
          <span class="sr-only">Toggle menu</span>
          <svg width="22" height="18" viewBox="0 0 22 18" fill="none" xmlns="http://www.w3.org/2000/svg" class="stroke-current">
            <path d="M1 1H21M1 9H21M1 17H21" stroke-width="2" stroke-linecap="round"/>
          </svg>
          Menu
        </button>
      </div>
      {/* Mobile Nav Panel */}
      <div
        id="mobile-nav"
        class="lg:hidden max-h-0 overflow-hidden transition-[max-height] duration-300 ease-in-out border-t border-fg/15"
        aria-hidden="true"
      >
        <nav class="px-4 py-4 flex flex-col gap-4 text-sm" aria-label="Mobile Primary">
          {navLinks.map(link => (
            <a
              href={link.href}
              class:list={[
                'hover:text-neon',
                isActive(link.key) && 'text-neon font-semibold'
              ]}
              aria-current={isActive(link.key) ? 'page' : undefined}
              data-nav-close
            >
              {link.label}
            </a>
          ))}
        </nav>
      </div>
    </header>
    <main id="main" class={mainClass}>
      <slot />
    </main>
    <footer class="border-t border-fg/20">
      <div class="mx-auto max-w-7xl px-4 py-6 text-sm text-muted flex items-center justify-between">
        <span>Â© {new Date().getFullYear()} Beer Goggle Games</span>
        <a class="hover:text-neon" href={withBase('rss.xml')}>RSS</a>
      </div>
    </footer>
    <Analytics />
    <script is:inline>
      // Accessible mobile nav toggle
      (function(){
        const btn = document.getElementById('nav-toggle');
        const panel = document.getElementById('mobile-nav');
        if(!btn || !panel) return;

        function close(){
          panel.style.maxHeight = '0px';
          panel.setAttribute('aria-hidden', 'true');
          btn.setAttribute('aria-expanded', 'false');
        }
        function open(){
          panel.style.maxHeight = panel.scrollHeight + 'px';
          panel.setAttribute('aria-hidden', 'false');
          btn.setAttribute('aria-expanded', 'true');
        }
        btn.addEventListener('click', () => {
          const expanded = btn.getAttribute('aria-expanded') === 'true';
          expanded ? close() : open();
        });
        // Close on any nav link click
        panel.addEventListener('click', e => {
          const a = (e.target as HTMLElement).closest('[data-nav-close]');
          if (a) close();
        });
        // Close on Escape
        document.addEventListener('keydown', e => {
          if (e.key === 'Escape') close();
        });
        // Resize guard
        window.addEventListener('resize', () => {
          if (window.innerWidth >= 1024) {
            // Ensure open height sync if user enlarges screen mid-open
            if (btn.getAttribute('aria-expanded') === 'true') {
              panel.style.maxHeight = 'none';
            } else {
              panel.style.maxHeight = '0px';
            }
          } else {
            // Recalculate height if open on mobile
            if (btn.getAttribute('aria-expanded') === 'true') {
              panel.style.maxHeight = panel.scrollHeight + 'px';
            }
          }
        });
      })();
    </script>
  </body>
</html>
