---
import '../styles.css';
import { withBase, base } from '../lib/paths';

interface Props {
  title?: string;
  description?: string;
  canonical?: string;
  ogImage?: string;
  wide?: boolean;
  fullBleed?: boolean;
}

const {
  title = 'Beer Goggle Games',
  description = 'Drinking games, cocktails, party activities & more.',
  canonical,
  ogImage,
  wide = false,
  fullBleed = false
} = Astro.props as Props;

const current = Astro.url.pathname;
function isActive(segment: string) {
  const norm = segment.endsWith('/') ? segment : segment + '/';
  return current.startsWith(withBase(norm));
}

type IconName = 'home' | 'games' | 'drinks' | 'extras' | 'about' | 'contact' | 'search';

/**
 * Return an inline SVG string for the given icon.
 * All icons share the same stroke style for a consistent look.
 */
function icon(name: IconName, size = 18) {
  const base = `width="${size}" height="${size}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"`;
  switch (name) {
    case 'home':
      return `<svg ${base}><path d="M3 11.5 12 3l9 8.5M5 10v10h14V10"/></svg>`;
    case 'games': // dice
      return `<svg ${base}><rect x="3" y="3" width="18" height="18" rx="3"/><circle cx="9" cy="9" r="1.5"/><circle cx="15" cy="15" r="1.5"/></svg>`;
    case 'drinks': // cocktail
      return `<svg ${base}><path d="M3 4h18l-8.5 8.5v5.5l3 2H8l3-2v-5.5L3 4Z"/><path d="M10 4l4 4"/></svg>`;
    case 'extras': // sparkle
      return `<svg ${base}><path d="M12 3v4M12 17v4M7.05 7.05l2.83 2.83M14.12 14.12l2.83 2.83M3 12h4M17 12h4M7.05 16.95l2.83-2.83M14.12 9.88l2.83-2.83"/></svg>`;
    case 'about': // info
      return `<svg ${base}><circle cx="12" cy="12" r="9"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg>`;
    case 'contact': // mail
      return `<svg ${base}><rect x="3" y="5" width="18" height="14" rx="2"/><path d="m3 7 9 6 9-6"/></svg>`;
    case 'search': // magnifier
      return `<svg ${base}><circle cx="11" cy="11" r="7"/><path d="m21 21-4.35-4.35"/></svg>`;
  }
}

interface NavLink {
  href: string;
  label: string;
  key: string;
  icon: IconName;
}

const navLinks: NavLink[] = [
  { href: withBase(''),        label: 'Home',    key: '',        icon: 'home' },
  { href: withBase('games/'),  label: 'Games',   key: 'games',   icon: 'games' },
  { href: withBase('drinks/'), label: 'Drinks',  key: 'drinks',  icon: 'drinks' },
  { href: withBase('extras/'), label: 'Extras',  key: 'extras',  icon: 'extras' },
  { href: withBase('about'),   label: 'About',   key: 'about',   icon: 'about' },
  { href: withBase('contact'), label: 'Contact', key: 'contact', icon: 'contact' },
  { href: withBase('search'),  label: 'Search',  key: 'search',  icon: 'search' }
];

const mainClass = [
  'grow mx-auto w-full px-4 py-8',
  fullBleed ? '' : (wide ? 'max-w-7xl' : 'max-w-6xl')
].join(' ');

const year = new Date().getFullYear();
---
<!DOCTYPE html>
<html lang="en" class="bg-bg text-fg font-body" data-base={base}>
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    {canonical && <link rel="canonical" href={canonical} />}
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    {ogImage && <meta property="og:image" content={withBase(ogImage.replace(/^\/+/, ''))} />}
    <link rel="alternate" type="application/rss+xml" href={withBase('rss.xml')} title="Beer Goggle Games RSS" />
  </head>
  <body class="min-h-screen flex flex-col selection:bg-neon/40">

    <!-- Header -->
    <header class="sticky top-0 z-40 border-b border-fg/20 bg-bg/95 backdrop-blur-sm supports-[backdrop-filter]:bg-bg/75">
      <div class="mx-auto max-w-7xl px-4 py-4 flex items-center justify-between gap-6">
        <a href={withBase()} class="font-display text-2xl tracking-tight hover:text-neon whitespace-nowrap">
          BeerGoggleGames
        </a>

        <!-- Desktop Nav -->
        <nav class="hidden lg:flex flex-wrap items-center gap-5 text-sm" aria-label="Primary">
          {navLinks.map(l => {
            const active = isActive(l.key);
            return (
              <a
                href={l.href}
                class:list={[
                  'flex items-center gap-2 px-2 py-1 rounded hover:text-neon hover:bg-fg/5 transition-colors',
                  active && 'text-neon font-semibold bg-fg/10'
                ]}
                aria-current={active ? 'page' : undefined}
              >
                <span class="inline-block" aria-hidden="true" set:html={icon(l.icon, 18)} />
                <span>{l.label}</span>
              </a>
            );
          })}
        </nav>

        <!-- Mobile toggle -->
        <a
          id="nav-toggle"
          href="#site-menu"
          class="lg:hidden inline-flex items-center gap-2 border border-fg/30 px-3 py-2 text-sm rounded hover:border-neon hover:text-neon bg-bg/70 backdrop-blur-sm"
          aria-controls="site-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open menu</span>
          <svg width="22" height="18" viewBox="0 0 22 18" fill="none" class="stroke-current">
            <path d="M1 1H21M1 9H21M1 17H21" stroke-width="2" stroke-linecap="round" />
          </svg>
          Menu
        </a>
      </div>
    </header>

    <!-- Mobile Nav Overlay -->
    <div id="site-menu" class="site-menu-overlay" aria-label="Mobile navigation">
      <div class="site-menu-panel">
        <div class="flex items-center justify-between px-5 py-4 border-b border-fg/25">
          <span class="font-display text-xl">Menu</span>
          <a
            href="#"
            id="nav-close"
            class="inline-flex items-center gap-2 border border-fg/30 px-3 py-2 text-sm rounded hover:border-neon hover:text-neon"
            aria-label="Close menu"
          >✕</a>
        </div>
        <nav class="px-6 py-8 grow flex flex-col gap-4 text-lg overflow-y-auto" aria-label="Mobile Primary">
          {navLinks.map(l => {
            const active = isActive(l.key);
            return (
              <a
                href={l.href}
                class:list={[
                  'hover:text-neon flex items-center gap-3 px-2 py-2 rounded',
                  active && 'text-neon font-semibold bg-fg/10'
                ]}
                aria-current={active ? 'page' : undefined}
                data-close
              >
                <span class="inline-block" aria-hidden="true" set:html={icon(l.icon, 22)} />
                <span>{l.label}</span>
              </a>
            );
          })}
          <div class="mt-8 pt-6 border-t border-fg/20 text-sm text-muted leading-relaxed max-w-prose">
            <p class="mb-3">
              Explore hundreds of drinking games, cocktails, shots, activities & extras.
            </p>
            <p>Visit the <a class="hover:text-neon underline underline-offset-4" href={withBase('blog/')}>Blog</a> for guides & ideas.</p>
          </div>
        </nav>
      </div>
    </div>

    <main id="main" class={mainClass}>
      <slot />
    </main>

    <footer class="border-t border-fg/20">
      <div class="mx-auto max-w-7xl px-4 py-6 text-sm text-muted flex items-center justify-between">
        <span>© {year} Beer Goggle Games</span>
        <a class="hover:text-neon inline-flex items-center gap-2" href={withBase('rss.xml')}>
          <span class="inline-block" aria-hidden="true" set:html={icon('search', 16)} />
          RSS
        </a>
      </div>
    </footer>

    <!-- Enhancement script: sync aria-expanded -->
    <script is:inline>
      (function(){
        const toggle = document.getElementById('nav-toggle');
        if(!toggle) return;
        function sync(){ toggle.setAttribute('aria-expanded', location.hash === '#site-menu' ? 'true' : 'false'); }
        window.addEventListener('hashchange', sync); sync();
        document.querySelectorAll('#site-menu [data-close]').forEach(a =>
          a.addEventListener('click', () => {
            history.replaceState(null,'',location.pathname + location.search);
            sync();
          })
        );
      })();
    </script>
  </body>
</html>
