---
const { title } = Astro.props;
const site = Astro.site ?? 'https://example.com';
const builtPath = Astro.url.pathname.replace(/index\.html?$/,'');
const sharePageUrl = new URL(builtPath, site).toString();

const encodedUrl = encodeURIComponent(sharePageUrl);
const encodedTitle = encodeURIComponent(title ?? '');

interface ShareLink {
  name: string;
  url: string;
  icon: string;
  label?: string;
}

const shareLinks: ShareLink[] = [
  {
    name: 'Facebook',
    url: `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`,
    icon: 'facebook',
    label: 'Share on Facebook'
  },
  {
    name: 'X',
    url: `https://twitter.com/intent/tweet?url=${encodedUrl}&text=${encodedTitle}`,
    icon: 'x',
    label: 'Share on X'
  },
  {
    name: 'Reddit',
    url: `https://www.reddit.com/submit?url=${encodedUrl}&title=${encodedTitle}`,
    icon: 'reddit',
    label: 'Share on Reddit'
  },
  {
    name: 'WhatsApp',
    // Title + URL (WhatsApp encodes spaces as %20, encode once)
    url: `https://api.whatsapp.com/send?text=${encodeURIComponent(`${title ?? ''} ${sharePageUrl}`)}`,
    icon: 'whatsapp',
    label: 'Share on WhatsApp'
  }
];

function svg(name: string) {
  switch (name) {
    /* Brand / network icons */
    case 'facebook':
      return '<path d="M13 3h3V0h-3c-3.31 0-6 2.69-6 6v3H4v3h3v7h3v-7h3l1-3h-4V6c0-1.103.897-2 2-2Z"/>';
    case 'x':
      /* Stylised X (current Twitter/X brand) */
      return '<path d="M3 3h4.6l5.1 6.9L17.2 3H21l-6.9 9.3L21 21h-4.6l-5.3-7.2L6.8 21H3l7-9.7L3 3Z"/>';
    case 'reddit':
      return '<path d="M22 11.5c0-1.652-1.348-3-3-3a2.99 2.99 0 0 0-2.273 1.027c-1.281-.59-2.847-.967-4.527-1.027l1.457-4.563 3.156.75a2.501 2.501 0 1 0 .156-1.004l-3.781-.898a.501.501 0 0 0-.598.34l-1.664 5.211c-1.711.047-3.289.426-4.594 1.023A2.99 2.99 0 0 0 5 8.5c-1.652 0-3 1.348-3 3 0 1.089.594 2.041 1.477 2.562-.02.184-.031.371-.031.562 0 3.033 3.582 5.5 8 5.5s8-2.467 8-5.5c0-.191-.011-.379-.031-.562A2.994 2.994 0 0 0 22 11.5ZM4 11.5c0-1.103.897-2 2-2 .672 0 1.27.336 1.636.848C6.875 10.949 6.18 11.28 5.605 11.7c-.49.36-.882.78-1.164 1.207A1.98 1.98 0 0 1 4 11.5Zm10.5 5.25c-.912.912-2.727.977-2.977.977-.25 0-2.065-.065-2.977-.977a.501.501 0 1 1 .707-.707c.42.42 1.43.684 2.27.684.84 0 1.85-.264 2.27-.684a.501.501 0 0 1 .707.707ZM16 13a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm-8-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm12 0c0 .739-.405 1.424-1.109 1.941a.5.5 0 0 0-.203.438c.008.089.012.179.012.271 0 2.38-3.065 4.5-7 4.5s-7-2.12-7-4.5c0-.092.004-.182.012-.271a.5.5 0 0 0-.203-.438C4.405 13.924 4 13.239 4 12.5a2 2 0 0 1 2-2c.581 0 1.135.255 1.51.699a.5.5 0 0 0 .561.146c1.281-.59 2.922-.922 4.679-.922 1.757 0 3.398.332 4.679.922a.5.5 0 0 0 .561-.146A1.997 1.997 0 0 1 20 10.5a2 2 0 0 1 2 2Z"/>';
    case 'whatsapp':
      /* WhatsApp circular icon with phone bubble */
      return '<path d="M12.04 2c-5.52 0-10 4.42-10 9.86 0 1.74.48 3.42 1.4 4.9L2 22l5.37-1.38c1.42.78 3.02 1.2 4.67 1.2 5.52 0 10-4.42 10-9.86S17.56 2 12.04 2Zm0 17.95c-1.44 0-2.85-.38-4.08-1.12l-.29-.17-3.18.82.85-3.04-.19-.31a7.66 7.66 0 0 1-1.16-4.07c0-4.22 3.48-7.65 7.75-7.65 4.27 0 7.75 3.43 7.75 7.65 0 4.22-3.48 7.64-7.75 7.64Zm4.21-5.66c-.23-.12-1.36-.67-1.57-.74-.21-.08-.36-.12-.5.12-.15.23-.58.74-.71.89-.13.15-.26.17-.48.06-.23-.12-.94-.34-1.78-1.09-.66-.58-1.1-1.29-1.23-1.51-.13-.23-.01-.35.11-.46.11-.11.23-.26.34-.38.11-.13.15-.23.23-.38.08-.15.04-.29-.02-.41-.06-.12-.5-1.2-.69-1.64-.18-.44-.37-.38-.5-.39-.13-.01-.29-.01-.44-.01-.15 0-.41.06-.63.29-.21.23-.82.8-.82 1.95 0 1.14.84 2.25.96 2.41.13.15 1.64 2.55 4.02 3.47.56.22.99.35 1.33.45.56.18 1.06.15 1.46.09.45-.07 1.36-.55 1.55-1.09.19-.53.19-.99.13-1.09-.06-.09-.21-.15-.44-.26Z"/>';
    /* Utility icons */
    case 'copy': // Clipboard-style copy icon
      return '<path d="M8 2.5A2.5 2.5 0 0 1 10.5 0h5A2.5 2.5 0 0 1 18 2.5V4h1.25A2.75 2.75 0 0 1 22 6.75v11.5A2.75 2.75 0 0 1 19.25 21H8.75A2.75 2.75 0 0 1 6 18.25V17H4.75A2.75 2.75 0 0 1 2 14.25v-9.5A2.75 2.75 0 0 1 4.75 2h3.3c-.02.16-.05.33-.05.5ZM10.5 2A.5.5 0 0 0 10 2.5V4h6V2.5a.5.5 0 0 0-.5-.5h-5Z"/><path d="M8 6.75A1.75 1.75 0 0 1 9.75 5h9.5A1.75 1.75 0 0 1 21 6.75v11.5A1.75 1.75 0 0 1 19.25 20h-9.5A1.75 1.75 0 0 1 8 18.25Z"/>';
  }
  return '';
}
---
<div class="mt-8 border border-fg/15 rounded-xl p-5 bg-fg/5">
  <h4 class="font-semibold mb-3 mt-0 text-sm tracking-wide uppercase text-muted">
    Share This Page
  </h4>

  <div class="flex flex-wrap gap-3">
    {shareLinks.map(link => (
      <a
        href={link.url}
        target="_blank"
        rel="noopener noreferrer"
        class="group inline-flex items-center gap-2 px-3 py-2 rounded-lg border border-fg/15 bg-bg/60 hover:border-neon/50 hover:bg-fg/10 hover:text-neon text-xs font-medium transition"
        aria-label={link.label ?? link.name}
      >
        <span class="w-4 h-4 block" set:html={`<svg viewBox='0 0 24 24' fill='currentColor' class='w-4 h-4'>${svg(link.icon)}</svg>`}></span>
        <span>{link.name}</span>
      </a>
    ))}

    <button
      type="button"
      class="group inline-flex items-center gap-2 px-3 py-2 rounded-lg border border-fg/15 bg-bg/60 hover:border-neon/50 hover:bg-fg/10 hover:text-neon text-xs font-medium transition relative"
      data-copy-button
      aria-label="Copy page URL to clipboard"
    >
      <span class="w-4 h-4 block" set:html={`<svg viewBox='0 0 24 24' fill='currentColor' class='w-4 h-4'>${svg('copy')}</svg>`}></span>
      <span>Copy</span>
      <span
        class="absolute -bottom-5 left-1/2 -translate-x-1/2 text-[10px] opacity-0 group-[data-copied='true']:opacity-100 transition text-neon"
        aria-live="polite"
      >Copied!</span>
    </button>
  </div>
</div>

<script is:inline>
(function(){
  if (location.hash === '#copy') {
    history.replaceState(null,'',location.pathname + location.search);
  }

  const PAGE_URL = window.location.href.split('#')[0];
  const btn = document.querySelector('[data-copy-button]');
  if(!btn) return;

  function fallbackCopy(text){
    const ta = document.createElement('textarea');
    ta.value = text;
    ta.style.position='fixed';
    ta.style.top='-2000px';
    document.body.appendChild(ta);
    ta.select();
    try { document.execCommand('copy'); } catch(_) {}
    document.body.removeChild(ta);
  }

  function copy(text){
    if (navigator.clipboard?.writeText) {
      return navigator.clipboard.writeText(text).catch(()=>fallbackCopy(text));
    }
    fallbackCopy(text);
    return Promise.resolve();
  }

  let timer;
  btn.addEventListener('click', e => {
    e.preventDefault();
    copy(PAGE_URL).then(()=>{
      btn.dataset.copied = 'true';
      if (timer) clearTimeout(timer);
      timer = setTimeout(()=>{ delete btn.dataset.copied; }, 1600);
    });
  });
})();
</script>
