---
/**
 * Global layout with robust base handling and helper.
 */
const {
  title = 'Beer Goggle Games',
  description = 'Drinking games, cocktails, party activities & more.',
  noindex = false
} = Astro.props;

const siteTitle = 'Beer Goggle Games';
const fullTitle = title === siteTitle ? title : `${title} | ${siteTitle}`;

// Normalize base to always look like: /BeerGoggleGames/
const rawBase = import.meta.env.BASE_URL || '/';
const base = (() => {
  const trimmed = rawBase.replace(/^\/+|\/+$/g, ''); // remove leading/trailing slashes
  return trimmed ? `/${trimmed}/` : '/';
})();

// Helper to join paths safely
function withBase(path = '') {
  return base + path.replace(/^\/+/, '');
}

const canonical = new URL(Astro.url.pathname, Astro.site ?? 'https://benbarraclough.github.io/BeerGoggleGames').toString();
const ogImage = withBase('images/og-default.png');
---
<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="utf-8" />
    <title>{fullTitle}</title>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    {description && <meta name="description" content={description} />}
    <link rel="canonical" href={canonical} />
    {noindex && <meta name="robots" content="noindex" />}
    <meta property="og:title" content={fullTitle} />
    {description && <meta property="og:description" content={description} />}
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical} />
    <meta property="og:image" content={ogImage} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={fullTitle} />
    {description && <meta name="twitter:description" content={description} />}
    <meta name="twitter:image" content={ogImage} />
    <link rel="icon" type="image/png" href={withBase('favicon.png')} />
  </head>
  <body class="min-h-screen bg-white text-gray-900 antialiased">
    <header class="border-b bg-gray-50">
      <div class="max-w-6xl mx-auto px-4 py-4 flex flex-wrap items-center gap-4">
        <a href={withBase()} class="font-bold text-lg">{siteTitle}</a>
        <nav class="flex flex-wrap gap-4 text-sm">
          <a href={withBase('games/')} class="hover:underline">Games</a>
          <a href={withBase('games/types/')} class="hover:underline">Types</a>
          <a href={withBase('games/random/')} class="hover:underline">Random</a>
          <a href={withBase('drinks/')} class="hover:underline">Drinks</a>
          <a href={withBase('drinks/cocktail-recipes/')} class="hover:underline">Cocktails</a>
          <a href={withBase('drinks/shot-recipes/')} class="hover:underline">Shots</a>
          <a href={withBase('activities/')} class="hover:underline">Activities</a>
          <a href={withBase('blog/')} class="hover:underline">Posts</a>
          <a href={withBase('search')} class="hover:underline">Search</a>
          <a href={withBase('rss.xml')} class="hover:underline">RSS</a>
        </nav>
      </div>
    </header>
    <main class="max-w-6xl mx-auto px-4 py-8">
      <slot />
    </main>
    <footer class="border-t text-sm text-gray-500 py-8">
      <div class="max-w-6xl mx-auto px-4 space-y-2">
        <div>Â© {new Date().getFullYear()} Beer Goggle Games</div>
        <div><a class="text-blue-600 hover:underline" href={withBase('rss.xml')}>RSS Feed</a></div>
      </div>
    </footer>
    <script>
      // Rewrite any <img src="/images/..."> to include base (GitHub Pages friendly)
      (function() {
        var b = {base};
        if (!b || b === '/') return;
        document.querySelectorAll('img[src^="/images/"]').forEach(img => {
          img.src = b.replace(/\/$/, '') + img.getAttribute('src');
        });
        // Also fix any anchor href starting with '/images/'
        document.querySelectorAll('a[href^="/images/"]').forEach(a => {
          a.href = b.replace(/\/$/, '') + a.getAttribute('href');
        });
      })();
    </script>
  </body>
</html>
